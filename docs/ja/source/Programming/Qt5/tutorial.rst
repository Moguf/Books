基本的なQt5の使い方。
=====================

Qt5はIDEをサポートしており、グラフィカルかつお手軽にプログラミングすることができる。また、ウィンドウサイズなどのGUIの形や色などのプロパティーも同時に設定できることが非常に便利である。ここでは、多くの簡単なソースコードを学習することで、Qt5プログラミングの概要をつかむ。

.. contents:: 目次
   :depth: 2
   :local:

ベースとなるクラス
----------------

Widegets
^^^^^^^^^^^

  Qt5におけるもっとも基本的なライブラリーである。Widgetsはデータやステータス情報の表示、インプットの処理、Widgetsへのコンテンツの提供などができる。
  実際は **QWidegts** としてプログラムに実装する。これは基本となるクラスであり、すべてのQt5のエレメントはQwidgetsを継承している。widgetsのサブクラス化はQWidgetのサブクラスと仮想イベントハンドラを含んでいる。


Styles
^^^^^^^^^^^

  Styleはwidgetsの代わりに描画し、GUIの見た目と操作性を含んでいる。Qtでは、QStyleクラスとして提供されている。


Layouts  
^^^^^^^^^^^

  Layoutsは子widgetsを自動的に配置するためのエレガントでフレキシブルな方法である。それぞれのwidgetsは `sizeHint` と `sizePolicy` を通して、必要なサイズ情報を報告し、レイアウトは利用できるスペースに適切に配置される。

  
Model/View Classes
^^^^^^^^^^^^^^^^^^^^^^

`model/view` アーキテクチャはユーザーから入力されるデータを操作するクラスを提供する。リストやテーブルを使うData-drivenアプリケーションは、dataとviewを分けて構築される。


Graphics View
^^^^^^^^^^^^^^^

`Graphics view Framework` はオリジナルの2Dアイテムを制御するクラスを提供している。
  

チュートリアル
----------------------

.. toctree::
   :maxdepth: 1

   widgets_tuto.rst
   model_view_tuto.rst
   grahpics_view.rst

